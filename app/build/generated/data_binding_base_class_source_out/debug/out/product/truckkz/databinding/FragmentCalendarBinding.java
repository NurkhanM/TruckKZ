// Generated by view binder compiler. Do not edit!
package product.truckkz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.applandeo.materialcalendarview.CalendarView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import product.truckkz.R;

public final class FragmentCalendarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout calendarToolbar;

  @NonNull
  public final CalendarView calendarView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final ImageView clock;

  @NonNull
  public final LinearLayout constraint;

  @NonNull
  public final LinearLayout constraintLayout;

  @NonNull
  public final LinearLayout gifCalendar;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imgAuthCalendar;

  @NonNull
  public final ImageView imgAuthtet;

  @NonNull
  public final LinearLayout linCalen1;

  @NonNull
  public final ImageView newMessageCalendar;

  @NonNull
  public final TextView nextDate;

  @NonNull
  public final RecyclerView recyclerCalendar;

  @NonNull
  public final TextView rvTitleCalendar;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView txtAddTitle;

  private FragmentCalendarBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout calendarToolbar, @NonNull CalendarView calendarView,
      @NonNull CardView cardView, @NonNull CardView cardView2, @NonNull ImageView clock,
      @NonNull LinearLayout constraint, @NonNull LinearLayout constraintLayout,
      @NonNull LinearLayout gifCalendar, @NonNull ImageView imageView,
      @NonNull ImageView imgAuthCalendar, @NonNull ImageView imgAuthtet,
      @NonNull LinearLayout linCalen1, @NonNull ImageView newMessageCalendar,
      @NonNull TextView nextDate, @NonNull RecyclerView recyclerCalendar,
      @NonNull TextView rvTitleCalendar, @NonNull TextView textView2,
      @NonNull TextView txtAddTitle) {
    this.rootView = rootView;
    this.calendarToolbar = calendarToolbar;
    this.calendarView = calendarView;
    this.cardView = cardView;
    this.cardView2 = cardView2;
    this.clock = clock;
    this.constraint = constraint;
    this.constraintLayout = constraintLayout;
    this.gifCalendar = gifCalendar;
    this.imageView = imageView;
    this.imgAuthCalendar = imgAuthCalendar;
    this.imgAuthtet = imgAuthtet;
    this.linCalen1 = linCalen1;
    this.newMessageCalendar = newMessageCalendar;
    this.nextDate = nextDate;
    this.recyclerCalendar = recyclerCalendar;
    this.rvTitleCalendar = rvTitleCalendar;
    this.textView2 = textView2;
    this.txtAddTitle = txtAddTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_calendar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCalendarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calendarToolbar;
      ConstraintLayout calendarToolbar = ViewBindings.findChildViewById(rootView, id);
      if (calendarToolbar == null) {
        break missingId;
      }

      id = R.id.calendarView;
      CalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.cardView2;
      CardView cardView2 = ViewBindings.findChildViewById(rootView, id);
      if (cardView2 == null) {
        break missingId;
      }

      id = R.id.clock;
      ImageView clock = ViewBindings.findChildViewById(rootView, id);
      if (clock == null) {
        break missingId;
      }

      id = R.id.constraint;
      LinearLayout constraint = ViewBindings.findChildViewById(rootView, id);
      if (constraint == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      LinearLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.gif_calendar;
      LinearLayout gifCalendar = ViewBindings.findChildViewById(rootView, id);
      if (gifCalendar == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.img_auth_calendar;
      ImageView imgAuthCalendar = ViewBindings.findChildViewById(rootView, id);
      if (imgAuthCalendar == null) {
        break missingId;
      }

      id = R.id.img_authtet;
      ImageView imgAuthtet = ViewBindings.findChildViewById(rootView, id);
      if (imgAuthtet == null) {
        break missingId;
      }

      id = R.id.linCalen1;
      LinearLayout linCalen1 = ViewBindings.findChildViewById(rootView, id);
      if (linCalen1 == null) {
        break missingId;
      }

      id = R.id.new_message_calendar;
      ImageView newMessageCalendar = ViewBindings.findChildViewById(rootView, id);
      if (newMessageCalendar == null) {
        break missingId;
      }

      id = R.id.nextDate;
      TextView nextDate = ViewBindings.findChildViewById(rootView, id);
      if (nextDate == null) {
        break missingId;
      }

      id = R.id.recyclerCalendar;
      RecyclerView recyclerCalendar = ViewBindings.findChildViewById(rootView, id);
      if (recyclerCalendar == null) {
        break missingId;
      }

      id = R.id.rv_title_calendar;
      TextView rvTitleCalendar = ViewBindings.findChildViewById(rootView, id);
      if (rvTitleCalendar == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.txtAddTitle;
      TextView txtAddTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtAddTitle == null) {
        break missingId;
      }

      return new FragmentCalendarBinding((ConstraintLayout) rootView, calendarToolbar, calendarView,
          cardView, cardView2, clock, constraint, constraintLayout, gifCalendar, imageView,
          imgAuthCalendar, imgAuthtet, linCalen1, newMessageCalendar, nextDate, recyclerCalendar,
          rvTitleCalendar, textView2, txtAddTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

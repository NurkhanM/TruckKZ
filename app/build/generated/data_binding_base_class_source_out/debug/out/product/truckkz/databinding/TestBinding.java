// Generated by view binder compiler. Do not edit!
package product.truckkz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import product.truckkz.R;

public final class TestBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText authEditEmail;

  @NonNull
  public final TextInputEditText authEditPassword;

  @NonNull
  public final MaterialButton btnAuth;

  @NonNull
  public final ConstraintLayout cons1;

  @NonNull
  public final LinearLayout gifAut;

  @NonNull
  public final ConstraintLayout splashScreen1;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextInputLayout textInputLayout2;

  @NonNull
  public final TextView txtCenterAutTitle;

  @NonNull
  public final TextView txtRestoreAuth;

  @NonNull
  public final LinearLayout txtTitleAuth;

  private TestBinding(@NonNull ConstraintLayout rootView, @NonNull TextInputEditText authEditEmail,
      @NonNull TextInputEditText authEditPassword, @NonNull MaterialButton btnAuth,
      @NonNull ConstraintLayout cons1, @NonNull LinearLayout gifAut,
      @NonNull ConstraintLayout splashScreen1, @NonNull TextInputLayout textInputLayout,
      @NonNull TextInputLayout textInputLayout2, @NonNull TextView txtCenterAutTitle,
      @NonNull TextView txtRestoreAuth, @NonNull LinearLayout txtTitleAuth) {
    this.rootView = rootView;
    this.authEditEmail = authEditEmail;
    this.authEditPassword = authEditPassword;
    this.btnAuth = btnAuth;
    this.cons1 = cons1;
    this.gifAut = gifAut;
    this.splashScreen1 = splashScreen1;
    this.textInputLayout = textInputLayout;
    this.textInputLayout2 = textInputLayout2;
    this.txtCenterAutTitle = txtCenterAutTitle;
    this.txtRestoreAuth = txtRestoreAuth;
    this.txtTitleAuth = txtTitleAuth;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TestBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.authEditEmail;
      TextInputEditText authEditEmail = ViewBindings.findChildViewById(rootView, id);
      if (authEditEmail == null) {
        break missingId;
      }

      id = R.id.authEditPassword;
      TextInputEditText authEditPassword = ViewBindings.findChildViewById(rootView, id);
      if (authEditPassword == null) {
        break missingId;
      }

      id = R.id.btn_auth;
      MaterialButton btnAuth = ViewBindings.findChildViewById(rootView, id);
      if (btnAuth == null) {
        break missingId;
      }

      id = R.id.cons1;
      ConstraintLayout cons1 = ViewBindings.findChildViewById(rootView, id);
      if (cons1 == null) {
        break missingId;
      }

      id = R.id.gif_aut;
      LinearLayout gifAut = ViewBindings.findChildViewById(rootView, id);
      if (gifAut == null) {
        break missingId;
      }

      id = R.id.splashScreen1;
      ConstraintLayout splashScreen1 = ViewBindings.findChildViewById(rootView, id);
      if (splashScreen1 == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.textInputLayout2;
      TextInputLayout textInputLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout2 == null) {
        break missingId;
      }

      id = R.id.txt_center_aut_title;
      TextView txtCenterAutTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtCenterAutTitle == null) {
        break missingId;
      }

      id = R.id.txt_restore_auth;
      TextView txtRestoreAuth = ViewBindings.findChildViewById(rootView, id);
      if (txtRestoreAuth == null) {
        break missingId;
      }

      id = R.id.txtTitleAuth;
      LinearLayout txtTitleAuth = ViewBindings.findChildViewById(rootView, id);
      if (txtTitleAuth == null) {
        break missingId;
      }

      return new TestBinding((ConstraintLayout) rootView, authEditEmail, authEditPassword, btnAuth,
          cons1, gifAut, splashScreen1, textInputLayout, textInputLayout2, txtCenterAutTitle,
          txtRestoreAuth, txtTitleAuth);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

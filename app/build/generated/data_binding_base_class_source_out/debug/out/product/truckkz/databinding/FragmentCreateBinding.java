// Generated by view binder compiler. Do not edit!
package product.truckkz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import product.truckkz.R;

public final class FragmentCreateBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton addButton;

  @NonNull
  public final MaterialButton btnSendCreate;

  @NonNull
  public final CardView cardImageAdd;

  @NonNull
  public final ImageView clickBackCard;

  @NonNull
  public final ScrollView constraintFon1;

  @NonNull
  public final LinearLayout constraintFon2;

  @NonNull
  public final TextInputEditText editDescription;

  @NonNull
  public final TextInputEditText editPrice;

  @NonNull
  public final TextInputEditText editTitle;

  @NonNull
  public final ImageView imgLin;

  @NonNull
  public final ImageView imgMain;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout nextSelectedBrand;

  @NonNull
  public final LinearLayout nextSelectedCategory;

  @NonNull
  public final RecyclerView rvCreate;

  @NonNull
  public final TextInputLayout textInputLayoutPro2;

  @NonNull
  public final TextView textTitle;

  @NonNull
  public final ConstraintLayout toolBar;

  @NonNull
  public final TextView txtNameBrand;

  @NonNull
  public final TextView txtNameCategory;

  private FragmentCreateBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton addButton, @NonNull MaterialButton btnSendCreate,
      @NonNull CardView cardImageAdd, @NonNull ImageView clickBackCard,
      @NonNull ScrollView constraintFon1, @NonNull LinearLayout constraintFon2,
      @NonNull TextInputEditText editDescription, @NonNull TextInputEditText editPrice,
      @NonNull TextInputEditText editTitle, @NonNull ImageView imgLin, @NonNull ImageView imgMain,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout nextSelectedBrand,
      @NonNull LinearLayout nextSelectedCategory, @NonNull RecyclerView rvCreate,
      @NonNull TextInputLayout textInputLayoutPro2, @NonNull TextView textTitle,
      @NonNull ConstraintLayout toolBar, @NonNull TextView txtNameBrand,
      @NonNull TextView txtNameCategory) {
    this.rootView = rootView;
    this.addButton = addButton;
    this.btnSendCreate = btnSendCreate;
    this.cardImageAdd = cardImageAdd;
    this.clickBackCard = clickBackCard;
    this.constraintFon1 = constraintFon1;
    this.constraintFon2 = constraintFon2;
    this.editDescription = editDescription;
    this.editPrice = editPrice;
    this.editTitle = editTitle;
    this.imgLin = imgLin;
    this.imgMain = imgMain;
    this.linearLayout = linearLayout;
    this.nextSelectedBrand = nextSelectedBrand;
    this.nextSelectedCategory = nextSelectedCategory;
    this.rvCreate = rvCreate;
    this.textInputLayoutPro2 = textInputLayoutPro2;
    this.textTitle = textTitle;
    this.toolBar = toolBar;
    this.txtNameBrand = txtNameBrand;
    this.txtNameCategory = txtNameCategory;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCreateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCreateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_create, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCreateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_button;
      MaterialButton addButton = ViewBindings.findChildViewById(rootView, id);
      if (addButton == null) {
        break missingId;
      }

      id = R.id.btnSendCreate;
      MaterialButton btnSendCreate = ViewBindings.findChildViewById(rootView, id);
      if (btnSendCreate == null) {
        break missingId;
      }

      id = R.id.cardImage_Add;
      CardView cardImageAdd = ViewBindings.findChildViewById(rootView, id);
      if (cardImageAdd == null) {
        break missingId;
      }

      id = R.id.clickBackCard;
      ImageView clickBackCard = ViewBindings.findChildViewById(rootView, id);
      if (clickBackCard == null) {
        break missingId;
      }

      id = R.id.constraintFon1;
      ScrollView constraintFon1 = ViewBindings.findChildViewById(rootView, id);
      if (constraintFon1 == null) {
        break missingId;
      }

      id = R.id.constraintFon2;
      LinearLayout constraintFon2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintFon2 == null) {
        break missingId;
      }

      id = R.id.editDescription;
      TextInputEditText editDescription = ViewBindings.findChildViewById(rootView, id);
      if (editDescription == null) {
        break missingId;
      }

      id = R.id.editPrice;
      TextInputEditText editPrice = ViewBindings.findChildViewById(rootView, id);
      if (editPrice == null) {
        break missingId;
      }

      id = R.id.editTitle;
      TextInputEditText editTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTitle == null) {
        break missingId;
      }

      id = R.id.imgLin;
      ImageView imgLin = ViewBindings.findChildViewById(rootView, id);
      if (imgLin == null) {
        break missingId;
      }

      id = R.id.imgMain;
      ImageView imgMain = ViewBindings.findChildViewById(rootView, id);
      if (imgMain == null) {
        break missingId;
      }

      id = R.id.linear_layout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.nextSelectedBrand;
      LinearLayout nextSelectedBrand = ViewBindings.findChildViewById(rootView, id);
      if (nextSelectedBrand == null) {
        break missingId;
      }

      id = R.id.nextSelectedCategory;
      LinearLayout nextSelectedCategory = ViewBindings.findChildViewById(rootView, id);
      if (nextSelectedCategory == null) {
        break missingId;
      }

      id = R.id.rv_create;
      RecyclerView rvCreate = ViewBindings.findChildViewById(rootView, id);
      if (rvCreate == null) {
        break missingId;
      }

      id = R.id.textInputLayoutPro2;
      TextInputLayout textInputLayoutPro2 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutPro2 == null) {
        break missingId;
      }

      id = R.id.textTitle;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      id = R.id.toolBar;
      ConstraintLayout toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.txtNameBrand;
      TextView txtNameBrand = ViewBindings.findChildViewById(rootView, id);
      if (txtNameBrand == null) {
        break missingId;
      }

      id = R.id.txtNameCategory;
      TextView txtNameCategory = ViewBindings.findChildViewById(rootView, id);
      if (txtNameCategory == null) {
        break missingId;
      }

      return new FragmentCreateBinding((ConstraintLayout) rootView, addButton, btnSendCreate,
          cardImageAdd, clickBackCard, constraintFon1, constraintFon2, editDescription, editPrice,
          editTitle, imgLin, imgMain, linearLayout, nextSelectedBrand, nextSelectedCategory,
          rvCreate, textInputLayoutPro2, textTitle, toolBar, txtNameBrand, txtNameCategory);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

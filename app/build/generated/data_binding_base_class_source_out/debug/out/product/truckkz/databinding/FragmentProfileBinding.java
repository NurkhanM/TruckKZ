// Generated by view binder compiler. Do not edit!
package product.truckkz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pl.droidsonroids.gif.GifImageView;
import product.truckkz.R;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout Toolbar;

  @NonNull
  public final ScrollView consHome;

  @NonNull
  public final LinearLayout isProfileLiner;

  @NonNull
  public final GifImageView loader;

  @NonNull
  public final LinearLayout nextExitUser;

  @NonNull
  public final LinearLayout nextFavorite;

  @NonNull
  public final LinearLayout nextMyAds;

  @NonNull
  public final LinearLayout nextSettings;

  @NonNull
  public final TextView textFavorite;

  @NonNull
  public final TextView textMyAds;

  @NonNull
  public final TextView textProfileEmail;

  @NonNull
  public final TextView textProfileName;

  @NonNull
  public final TextView textSettings;

  @NonNull
  public final CircleImageView userImage;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout Toolbar, @NonNull ScrollView consHome,
      @NonNull LinearLayout isProfileLiner, @NonNull GifImageView loader,
      @NonNull LinearLayout nextExitUser, @NonNull LinearLayout nextFavorite,
      @NonNull LinearLayout nextMyAds, @NonNull LinearLayout nextSettings,
      @NonNull TextView textFavorite, @NonNull TextView textMyAds,
      @NonNull TextView textProfileEmail, @NonNull TextView textProfileName,
      @NonNull TextView textSettings, @NonNull CircleImageView userImage) {
    this.rootView = rootView;
    this.Toolbar = Toolbar;
    this.consHome = consHome;
    this.isProfileLiner = isProfileLiner;
    this.loader = loader;
    this.nextExitUser = nextExitUser;
    this.nextFavorite = nextFavorite;
    this.nextMyAds = nextMyAds;
    this.nextSettings = nextSettings;
    this.textFavorite = textFavorite;
    this.textMyAds = textMyAds;
    this.textProfileEmail = textProfileEmail;
    this.textProfileName = textProfileName;
    this.textSettings = textSettings;
    this.userImage = userImage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Toolbar;
      ConstraintLayout Toolbar = ViewBindings.findChildViewById(rootView, id);
      if (Toolbar == null) {
        break missingId;
      }

      id = R.id.consHome;
      ScrollView consHome = ViewBindings.findChildViewById(rootView, id);
      if (consHome == null) {
        break missingId;
      }

      id = R.id.isProfileLiner;
      LinearLayout isProfileLiner = ViewBindings.findChildViewById(rootView, id);
      if (isProfileLiner == null) {
        break missingId;
      }

      id = R.id.loader;
      GifImageView loader = ViewBindings.findChildViewById(rootView, id);
      if (loader == null) {
        break missingId;
      }

      id = R.id.nextExitUser;
      LinearLayout nextExitUser = ViewBindings.findChildViewById(rootView, id);
      if (nextExitUser == null) {
        break missingId;
      }

      id = R.id.nextFavorite;
      LinearLayout nextFavorite = ViewBindings.findChildViewById(rootView, id);
      if (nextFavorite == null) {
        break missingId;
      }

      id = R.id.nextMyAds;
      LinearLayout nextMyAds = ViewBindings.findChildViewById(rootView, id);
      if (nextMyAds == null) {
        break missingId;
      }

      id = R.id.nextSettings;
      LinearLayout nextSettings = ViewBindings.findChildViewById(rootView, id);
      if (nextSettings == null) {
        break missingId;
      }

      id = R.id.textFavorite;
      TextView textFavorite = ViewBindings.findChildViewById(rootView, id);
      if (textFavorite == null) {
        break missingId;
      }

      id = R.id.textMyAds;
      TextView textMyAds = ViewBindings.findChildViewById(rootView, id);
      if (textMyAds == null) {
        break missingId;
      }

      id = R.id.textProfileEmail;
      TextView textProfileEmail = ViewBindings.findChildViewById(rootView, id);
      if (textProfileEmail == null) {
        break missingId;
      }

      id = R.id.textProfileName;
      TextView textProfileName = ViewBindings.findChildViewById(rootView, id);
      if (textProfileName == null) {
        break missingId;
      }

      id = R.id.textSettings;
      TextView textSettings = ViewBindings.findChildViewById(rootView, id);
      if (textSettings == null) {
        break missingId;
      }

      id = R.id.userImage;
      CircleImageView userImage = ViewBindings.findChildViewById(rootView, id);
      if (userImage == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, Toolbar, consHome,
          isProfileLiner, loader, nextExitUser, nextFavorite, nextMyAds, nextSettings, textFavorite,
          textMyAds, textProfileEmail, textProfileName, textSettings, userImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

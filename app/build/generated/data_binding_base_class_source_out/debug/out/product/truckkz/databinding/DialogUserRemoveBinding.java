// Generated by view binder compiler. Do not edit!
package product.truckkz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import product.truckkz.R;

public final class DialogUserRemoveBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView dialogExit;

  @NonNull
  public final TextView dialogNo;

  @NonNull
  public final MaterialButton dialogYes;

  @NonNull
  public final TextView txtTitle;

  private DialogUserRemoveBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView dialogExit,
      @NonNull TextView dialogNo, @NonNull MaterialButton dialogYes, @NonNull TextView txtTitle) {
    this.rootView = rootView;
    this.dialogExit = dialogExit;
    this.dialogNo = dialogNo;
    this.dialogYes = dialogYes;
    this.txtTitle = txtTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogUserRemoveBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogUserRemoveBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_user_remove, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogUserRemoveBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dialog_exit;
      ImageView dialogExit = ViewBindings.findChildViewById(rootView, id);
      if (dialogExit == null) {
        break missingId;
      }

      id = R.id.dialog_no;
      TextView dialogNo = ViewBindings.findChildViewById(rootView, id);
      if (dialogNo == null) {
        break missingId;
      }

      id = R.id.dialog_yes;
      MaterialButton dialogYes = ViewBindings.findChildViewById(rootView, id);
      if (dialogYes == null) {
        break missingId;
      }

      id = R.id.txt_title;
      TextView txtTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle == null) {
        break missingId;
      }

      return new DialogUserRemoveBinding((ConstraintLayout) rootView, dialogExit, dialogNo,
          dialogYes, txtTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

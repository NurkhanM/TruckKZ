// Generated by view binder compiler. Do not edit!
package product.truckkz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import product.truckkz.R;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText authNumberBig;

  @NonNull
  public final TextInputEditText authNumberSmall;

  @NonNull
  public final MaterialButton btnSortSearch;

  @NonNull
  public final ConstraintLayout constSort1;

  @NonNull
  public final ConstraintLayout constSort2;

  @NonNull
  public final EditText edtSearch;

  @NonNull
  public final LinearLayoutCompat linBig;

  @NonNull
  public final LinearLayout linCountry;

  @NonNull
  public final LinearLayoutCompat linDefault;

  @NonNull
  public final LinearLayout linPrice;

  @NonNull
  public final LinearLayoutCompat linSmall;

  @NonNull
  public final LinearLayoutCompat linStarted;

  @NonNull
  public final LinearLayout nextSelectedCategory;

  @NonNull
  public final RadioButton radioBig;

  @NonNull
  public final RadioButton radioDefault;

  @NonNull
  public final RadioButton radioSmall;

  @NonNull
  public final RadioButton radioStarted;

  @NonNull
  public final RecyclerView rvSortSearch;

  @NonNull
  public final TextInputLayout textInputLayout1;

  @NonNull
  public final TextInputLayout textInputLayout2;

  @NonNull
  public final TextView textNameCategory;

  @NonNull
  public final TextView textNameLocation;

  @NonNull
  public final TextView textNamePrice;

  @NonNull
  public final TextView textNameSort;

  @NonNull
  public final LinearLayout tuneView;

  @NonNull
  public final TextView txtNameCategory;

  @NonNull
  public final TextView txtNameCity;

  private FragmentSearchBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText authNumberBig, @NonNull TextInputEditText authNumberSmall,
      @NonNull MaterialButton btnSortSearch, @NonNull ConstraintLayout constSort1,
      @NonNull ConstraintLayout constSort2, @NonNull EditText edtSearch,
      @NonNull LinearLayoutCompat linBig, @NonNull LinearLayout linCountry,
      @NonNull LinearLayoutCompat linDefault, @NonNull LinearLayout linPrice,
      @NonNull LinearLayoutCompat linSmall, @NonNull LinearLayoutCompat linStarted,
      @NonNull LinearLayout nextSelectedCategory, @NonNull RadioButton radioBig,
      @NonNull RadioButton radioDefault, @NonNull RadioButton radioSmall,
      @NonNull RadioButton radioStarted, @NonNull RecyclerView rvSortSearch,
      @NonNull TextInputLayout textInputLayout1, @NonNull TextInputLayout textInputLayout2,
      @NonNull TextView textNameCategory, @NonNull TextView textNameLocation,
      @NonNull TextView textNamePrice, @NonNull TextView textNameSort,
      @NonNull LinearLayout tuneView, @NonNull TextView txtNameCategory,
      @NonNull TextView txtNameCity) {
    this.rootView = rootView;
    this.authNumberBig = authNumberBig;
    this.authNumberSmall = authNumberSmall;
    this.btnSortSearch = btnSortSearch;
    this.constSort1 = constSort1;
    this.constSort2 = constSort2;
    this.edtSearch = edtSearch;
    this.linBig = linBig;
    this.linCountry = linCountry;
    this.linDefault = linDefault;
    this.linPrice = linPrice;
    this.linSmall = linSmall;
    this.linStarted = linStarted;
    this.nextSelectedCategory = nextSelectedCategory;
    this.radioBig = radioBig;
    this.radioDefault = radioDefault;
    this.radioSmall = radioSmall;
    this.radioStarted = radioStarted;
    this.rvSortSearch = rvSortSearch;
    this.textInputLayout1 = textInputLayout1;
    this.textInputLayout2 = textInputLayout2;
    this.textNameCategory = textNameCategory;
    this.textNameLocation = textNameLocation;
    this.textNamePrice = textNamePrice;
    this.textNameSort = textNameSort;
    this.tuneView = tuneView;
    this.txtNameCategory = txtNameCategory;
    this.txtNameCity = txtNameCity;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.authNumberBig;
      TextInputEditText authNumberBig = ViewBindings.findChildViewById(rootView, id);
      if (authNumberBig == null) {
        break missingId;
      }

      id = R.id.authNumberSmall;
      TextInputEditText authNumberSmall = ViewBindings.findChildViewById(rootView, id);
      if (authNumberSmall == null) {
        break missingId;
      }

      id = R.id.btnSortSearch;
      MaterialButton btnSortSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSortSearch == null) {
        break missingId;
      }

      id = R.id.constSort1;
      ConstraintLayout constSort1 = ViewBindings.findChildViewById(rootView, id);
      if (constSort1 == null) {
        break missingId;
      }

      id = R.id.constSort2;
      ConstraintLayout constSort2 = ViewBindings.findChildViewById(rootView, id);
      if (constSort2 == null) {
        break missingId;
      }

      id = R.id.edtSearch;
      EditText edtSearch = ViewBindings.findChildViewById(rootView, id);
      if (edtSearch == null) {
        break missingId;
      }

      id = R.id.linBig;
      LinearLayoutCompat linBig = ViewBindings.findChildViewById(rootView, id);
      if (linBig == null) {
        break missingId;
      }

      id = R.id.linCountry;
      LinearLayout linCountry = ViewBindings.findChildViewById(rootView, id);
      if (linCountry == null) {
        break missingId;
      }

      id = R.id.linDefault;
      LinearLayoutCompat linDefault = ViewBindings.findChildViewById(rootView, id);
      if (linDefault == null) {
        break missingId;
      }

      id = R.id.linPrice;
      LinearLayout linPrice = ViewBindings.findChildViewById(rootView, id);
      if (linPrice == null) {
        break missingId;
      }

      id = R.id.linSmall;
      LinearLayoutCompat linSmall = ViewBindings.findChildViewById(rootView, id);
      if (linSmall == null) {
        break missingId;
      }

      id = R.id.linStarted;
      LinearLayoutCompat linStarted = ViewBindings.findChildViewById(rootView, id);
      if (linStarted == null) {
        break missingId;
      }

      id = R.id.nextSelectedCategory;
      LinearLayout nextSelectedCategory = ViewBindings.findChildViewById(rootView, id);
      if (nextSelectedCategory == null) {
        break missingId;
      }

      id = R.id.radioBig;
      RadioButton radioBig = ViewBindings.findChildViewById(rootView, id);
      if (radioBig == null) {
        break missingId;
      }

      id = R.id.radioDefault;
      RadioButton radioDefault = ViewBindings.findChildViewById(rootView, id);
      if (radioDefault == null) {
        break missingId;
      }

      id = R.id.radioSmall;
      RadioButton radioSmall = ViewBindings.findChildViewById(rootView, id);
      if (radioSmall == null) {
        break missingId;
      }

      id = R.id.radioStarted;
      RadioButton radioStarted = ViewBindings.findChildViewById(rootView, id);
      if (radioStarted == null) {
        break missingId;
      }

      id = R.id.rv_sort_search;
      RecyclerView rvSortSearch = ViewBindings.findChildViewById(rootView, id);
      if (rvSortSearch == null) {
        break missingId;
      }

      id = R.id.textInputLayout1;
      TextInputLayout textInputLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout1 == null) {
        break missingId;
      }

      id = R.id.textInputLayout2;
      TextInputLayout textInputLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout2 == null) {
        break missingId;
      }

      id = R.id.text_name_category;
      TextView textNameCategory = ViewBindings.findChildViewById(rootView, id);
      if (textNameCategory == null) {
        break missingId;
      }

      id = R.id.text_name_location;
      TextView textNameLocation = ViewBindings.findChildViewById(rootView, id);
      if (textNameLocation == null) {
        break missingId;
      }

      id = R.id.text_name_price;
      TextView textNamePrice = ViewBindings.findChildViewById(rootView, id);
      if (textNamePrice == null) {
        break missingId;
      }

      id = R.id.text_name_sort;
      TextView textNameSort = ViewBindings.findChildViewById(rootView, id);
      if (textNameSort == null) {
        break missingId;
      }

      id = R.id.tuneView;
      LinearLayout tuneView = ViewBindings.findChildViewById(rootView, id);
      if (tuneView == null) {
        break missingId;
      }

      id = R.id.txtNameCategory;
      TextView txtNameCategory = ViewBindings.findChildViewById(rootView, id);
      if (txtNameCategory == null) {
        break missingId;
      }

      id = R.id.txtNameCity;
      TextView txtNameCity = ViewBindings.findChildViewById(rootView, id);
      if (txtNameCity == null) {
        break missingId;
      }

      return new FragmentSearchBinding((ConstraintLayout) rootView, authNumberBig, authNumberSmall,
          btnSortSearch, constSort1, constSort2, edtSearch, linBig, linCountry, linDefault,
          linPrice, linSmall, linStarted, nextSelectedCategory, radioBig, radioDefault, radioSmall,
          radioStarted, rvSortSearch, textInputLayout1, textInputLayout2, textNameCategory,
          textNameLocation, textNamePrice, textNameSort, tuneView, txtNameCategory, txtNameCity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

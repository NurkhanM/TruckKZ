// Generated by view binder compiler. Do not edit!
package product.truckkz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import product.truckkz.R;

public final class ItemRecomendBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardV;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final LinearLayout itemFavorite;

  @NonNull
  public final ImageView itemHomeImages;

  @NonNull
  public final ConstraintLayout rowCostom;

  @NonNull
  public final RatingBar svgRating;

  @NonNull
  public final TextView textDescription;

  @NonNull
  public final TextView textRatingSize;

  @NonNull
  public final TextView textTitle;

  private ItemRecomendBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardV,
      @NonNull ConstraintLayout constraintLayout, @NonNull LinearLayout itemFavorite,
      @NonNull ImageView itemHomeImages, @NonNull ConstraintLayout rowCostom,
      @NonNull RatingBar svgRating, @NonNull TextView textDescription,
      @NonNull TextView textRatingSize, @NonNull TextView textTitle) {
    this.rootView = rootView;
    this.cardV = cardV;
    this.constraintLayout = constraintLayout;
    this.itemFavorite = itemFavorite;
    this.itemHomeImages = itemHomeImages;
    this.rowCostom = rowCostom;
    this.svgRating = svgRating;
    this.textDescription = textDescription;
    this.textRatingSize = textRatingSize;
    this.textTitle = textTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRecomendBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRecomendBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_recomend, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRecomendBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardV;
      CardView cardV = ViewBindings.findChildViewById(rootView, id);
      if (cardV == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.item_favorite;
      LinearLayout itemFavorite = ViewBindings.findChildViewById(rootView, id);
      if (itemFavorite == null) {
        break missingId;
      }

      id = R.id.item_home_images;
      ImageView itemHomeImages = ViewBindings.findChildViewById(rootView, id);
      if (itemHomeImages == null) {
        break missingId;
      }

      ConstraintLayout rowCostom = (ConstraintLayout) rootView;

      id = R.id.svgRating;
      RatingBar svgRating = ViewBindings.findChildViewById(rootView, id);
      if (svgRating == null) {
        break missingId;
      }

      id = R.id.textDescription;
      TextView textDescription = ViewBindings.findChildViewById(rootView, id);
      if (textDescription == null) {
        break missingId;
      }

      id = R.id.text_rating_size;
      TextView textRatingSize = ViewBindings.findChildViewById(rootView, id);
      if (textRatingSize == null) {
        break missingId;
      }

      id = R.id.textTitle;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      return new ItemRecomendBinding((ConstraintLayout) rootView, cardV, constraintLayout,
          itemFavorite, itemHomeImages, rowCostom, svgRating, textDescription, textRatingSize,
          textTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
